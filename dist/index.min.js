!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).AsyncReplace=e()}(function(){return function r(i,o,u){function f(n,e){if(!o[n]){if(!i[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(s)return s(n,!0);throw(e=new Error("Cannot find module '"+n+"'")).code="MODULE_NOT_FOUND",e}t=o[n]={exports:{}},i[n][0].call(t.exports,function(e){return f(i[n][1][e]||e)},t,t.exports,r,i,o,u)}return o[n].exports}for(var s="function"==typeof require&&require,e=0;e<u.length;e++)f(u[e]);return f}({1:[function(e,n,t){"use strict";var l=this&&this.__awaiter||function(e,u,f,s){return new(f=f||Promise)(function(t,n){function r(e){try{o(s.next(e))}catch(e){n(e)}}function i(e){try{o(s.throw(e))}catch(e){n(e)}}function o(e){var n;e.done?t(e.value):((n=e.value)instanceof f?n:new f(function(e){e(n)})).then(r,i)}o((s=s.apply(e,u||[])).next())})};n.exports=class p{constructor(e){if(null==e)throw new TypeError("inputString must not be null or undefined");if("string"!=typeof e)throw new TypeError("inputString must be a string");if(""===e)throw new TypeError("inputString cannot be an empty string");this.inputString=e}replace(s,c,a=1){return l(this,void 0,void 0,function*(){if(null==s)throw new TypeError("searchValue must not be null or undefined");if("string"!=typeof s&&!(s instanceof RegExp))throw new TypeError("searchValue must be a string or regular expression");if(!Number.isFinite(a)||a<=0||a%1!=0)throw new TypeError("replaceLimit must be a positive integer greater than zero");if(null==c||""===c||"string"!=typeof c&&"function"!=typeof c&&("object"!=typeof c||!(c instanceof Promise)||"object"==typeof c&&"function"==typeof c.toString&&"AsyncFunction"===c.constructor.name))throw new TypeError("replaceValue must be a string, object with a toString method or async function");s instanceof RegExp&&s.flags.includes("g")&&(a=Number.MAX_SAFE_INTEGER);const n=this.inputString;let e="",t=0,r=0,i;try{i="string"==typeof s?new RegExp(s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g"):new RegExp(s.source,null!==s.flags&&s.flags.includes("g")?s.flags:`${s.flags||""}g`)}catch(e){throw new TypeError("searchValue must be a valid regular expression")}let o;for(;null!==(o=i.exec(n))&&r<a;){r++;const f=e=>l(this,void 0,void 0,function*(){return e instanceof Promise?yield e.then(f):"function"!=typeof e?"function"==typeof e.toString?e.toString():String(e):!o||"string"!=typeof o[0]&&"number"!=typeof o.index?void 0:e(o[0],o.index,...o.slice(1),n,r)});var u=yield f(c);e=e+n.slice(t,o.index)+u,t=i.lastIndex}return t<n.length&&(e+=n.slice(t)),new p(e)})}replaceAll(e,n){return l(this,void 0,void 0,function*(){return this.replace(e,n,Number.MAX_SAFE_INTEGER)})}replaceMany(r){return l(this,void 0,void 0,function*(){if(!Array.isArray(r))throw new TypeError("The replacements parameter must be an array of objects.");let e=new p(this.inputString);for(var{search:n,replace:t}of r){if(!n||!t)throw new TypeError("The search and replace values cannot be undefined or null.");e=yield e.replace(n,t)}return e})}toString(){return this.inputString}}},{}]},{},[1])(1)});