!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).AsyncReplace=e()}(function(){return function t(i,o,u){function a(r,e){if(!o[r]){if(!i[r]){var n="function"==typeof require&&require;if(!e&&n)return n(r,!0);if(s)return s(r,!0);throw(e=new Error("Cannot find module '"+r+"'")).code="MODULE_NOT_FOUND",e}n=o[r]={exports:{}},i[r][0].call(n.exports,function(e){return a(i[r][1][e]||e)},n,n.exports,t,i,o,u)}return o[r].exports}for(var s="function"==typeof require&&require,e=0;e<u.length;e++)a(u[e]);return a}({1:[function(e,r,n){"use strict";var l=this&&this.__awaiter||function(e,u,a,s){return new(a=a||Promise)(function(n,r){function t(e){try{o(s.next(e))}catch(e){r(e)}}function i(e){try{o(s.throw(e))}catch(e){r(e)}}function o(e){var r;e.done?n(e.value):((r=e.value)instanceof a?r:new a(function(e){e(r)})).then(t,i)}o((s=s.apply(e,u||[])).next())})};r.exports=class p{constructor(e){if(null==e)throw new TypeError("inputString must not be null or undefined");if("string"!=typeof e)throw new TypeError("inputString must be a string");if(""===e)throw new TypeError("inputString cannot be an empty string");this.inputString=e}replace(s,f,c=1){return l(this,void 0,void 0,function*(){if(null==s)throw new TypeError("searchValue must not be null or undefined");if("string"!=typeof s&&!(s instanceof RegExp))throw new TypeError("searchValue must be a string or regular expression");if(!Number.isFinite(c)||c<=0||c%1!=0)throw new TypeError("replaceLimit must be a positive integer greater than zero");if(null==f||""===f||"string"!=typeof f&&"function"!=typeof f&&("object"!=typeof f||!(f instanceof Promise)||"object"==typeof f&&"function"==typeof f.toString&&"AsyncFunction"===f.constructor.name))throw new TypeError("replaceValue must be a string, object with a toString method or async function");s instanceof RegExp&&s.flags.includes("g")&&(c=Number.MAX_SAFE_INTEGER);const r=this.inputString;let e="",n=0,t=0,i;try{i="string"==typeof s?new RegExp(s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g"):new RegExp(s.source,null!==s.flags&&s.flags.includes("g")?s.flags:`${s.flags||""}g`)}catch(e){throw new TypeError("searchValue must be a valid regular expression")}let o;for(;null!==(o=i.exec(r))&&t<c;){t++;const a=e=>l(this,void 0,void 0,function*(){return e instanceof Promise?yield e.then(a):"function"!=typeof e?"function"==typeof e.toString?e.toString():String(e):!o||"string"!=typeof o[0]&&"number"!=typeof o.index?void 0:e(o[0],o.index,...o.slice(1),r,t)});var u=yield a(f);e=e+r.slice(n,o.index)+u,n=i.lastIndex}return n<r.length&&(e+=r.slice(n)),new p(e)})}replaceAll(e,r){return l(this,void 0,void 0,function*(){return this.replace(e,r,Number.MAX_SAFE_INTEGER)})}replaceMany(t){return l(this,void 0,void 0,function*(){if(!Array.isArray(t))throw new TypeError("The replacements parameter must be an array of objects.");let e=new p(this.inputString);for(var{search:r,replace:n}of t){if(!r||!n)throw new TypeError("The search and replace values cannot be undefined or null.");e=yield e.replace(r,n)}return e})}replaceAllMany(t){return l(this,void 0,void 0,function*(){if(!Array.isArray(t))throw new TypeError("The replacements parameter must be an array of objects.");let e=new p(this.inputString);for(var{search:r,replace:n}of t){if(!r||!n)throw new TypeError("The search and replace values cannot be undefined or null.");e=yield e.replaceAll(r,n)}return e})}toString(){return this.inputString}}},{}]},{},[1])(1)});